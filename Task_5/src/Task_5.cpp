#include<iostream>

#include "../../global_utils.h"
#include "../include/task_5.h"


void task5()
{
    std::cout<<"----------------------------------------------------------------------------------------------\n";
    std::cout<<"| Выполнил   Вариант   Суть                                                                  |\n";
    std::cout<<"| Бойко А.О. 2         Поиск единственной отравленной бочки из 240 с помощью 5 дегустаторов  |\n";
    std::cout<<"----------------------------------------------------------------------------------------------\n\n";

    std::cout<<"     _______         _______         _______         _______         _______\n"
               "    /       \\       /       \\       /       \\       /       \\       /       \\\n"
               "   |         |     |         |     |         |     |         |     |         |\n"
               "   |    1    |     |    2    |     |    3    |     |   ...   |     |   240   |\n"
               "   |         |     |         |     |         |     |         |     |         |\n"
               "    \\_______/       \\_______/       \\_______/       \\_______/       \\_______/";

    std::cout<<"\nВыберите бочку, в которую хотите подсыпать яд и нам не говорите.\nНажмите клавишу Enter, чтобы продолжить...";
    check_istream();

    std::cout<<"\nЯд был успешно добавлен в бочку!\n";
    std::cout<<"     _______\n"
               "    /       \\\n"
               "   |         |\n"
               "   | ОТРАВА? |\n"
               "   |         |\n"
               "    \\_______/";
    std::cout<<"\nПатриций решил использовать 5 рабов для выявления отравленной бочки.\n"
               "До праздника оставалось два дня, а яд действует в течении 24 часов, нужно было срочно придумать способ.\n"
               "Нажмите клавишу Enter, чтобы продолжить...\n";
    check_istream();
    std::cout<<"\n\n\nВ первый день протестируем 210 бочек, оставив 30 на второй:\n"
               "     __X 5__         __X10__         __X10__         __X 5__         _______\n"
               "    /       \\       /       \\       /       \\       /       \\       /       \\\n"
               "   |  1 РАБ  |     | 02 РАБА |     | 03 РАБА |     | 04 РАБА |     |  30 шт  |\n"
               "   |  НА 16  |     |  НА 08  |     |  НА 04  |     |  НА 02  |     | НА СЛЕД |\n"
               "   |  БОЧЕК  |     |  БОЧЕК  |     |  БОЧКИ  |     |  БОЧКИ  |     |   ДЕНЬ  |\n"
               "    \\_______/       \\_______/       \\_______/       \\_______/       \\_______/"
               "\nИтого у нас 30 уникальных отрядов, тестирующих свой набор бочек.\nРабы приступают к дегустации.\nНажмите клавишу Enter, чтобы продолжить...\n";
    group* groups = init_groups();
    check_istream();
    print_groups(groups);

    unsigned int dead_group = 0;
    std::cout<<"\nВведите номер погибшего отряда (если все живы, введите 0): ";
    std::cin>>dead_group;
    if(!check_istream())dead_group = 0;

    if(dead_group == 0) start_next_day();
    else
    {
        --dead_group;
        continue_first(static_cast<int>(dead_group));
    }

    delete[] groups;

}

//O(количество живых * find_barrel_by_dead)
void continue_first(int dead_group)
{
    //случай 1
    if(dead_group>=0 && dead_group<=4)
    {
        std::cout<<"\n\n\n ----------------------------- День 2 -----------------------------\n"
                   "Круг подозрительных бочек удалось сузить до 16 штук и у нас осталось еще 4 раба!\n"
                   "Для удобства оставшихся рабов пронумеруем от 1 до 4\n"
                   "     _______         _______         _______         _______         _______\n"
                   "    /       \\       /       \\       /       \\       /       \\       /       \\\n"
                   "   |         |     |         |     |         |     |         |     |         |\n"
                   "   |    1    |     |    2    |     |    3    |     |   ...   |     |   016   |\n"
                   "   |         |     |         |     |         |     |         |     |         |\n"
                   "    \\_______/       \\_______/       \\_______/       \\_______/       \\_______/\n"
                   "Нажмите клавишу Enter, чтобы продолжить...\n";
        check_istream();

        barrel*  barrels = init_barrels(16);
        print_barrels(barrels, dead_group*16,16);
        barrel final_tasters = read_dead(4);

        int answer = find_barrel_by_dead(final_tasters, dead_group*16, 4, 16);
        std::cout<<"\n-> Отравлена была бочка "<<answer<<" <-\nИгра окончена!\n";

        delete[] barrels;
    }

    //случай 2
    else if(dead_group>=5 && dead_group<=14)
    {
        std::cout<<"\n\n\n ----------------------------- День 2 -----------------------------\n"
                   "Круг подозрительных бочек удалось сузить до 8 штук и у нас осталось еще 3 раба!\n"
                   "Для удобства оставшихся рабов пронумеруем от 1 до 3\n"
                   "     _______         _______         _______         _______         _______\n"
                   "    /       \\       /       \\       /       \\       /       \\       /       \\\n"
                   "   |         |     |         |     |         |     |         |     |         |\n"
                   "   |    1    |     |    2    |     |    3    |     |   ...   |     |   008   |\n"
                   "   |         |     |         |     |         |     |         |     |         |\n"
                   "    \\_______/       \\_______/       \\_______/       \\_______/       \\_______/\n"
                   "Нажмите клавишу Enter, чтобы продолжить...\n";
        check_istream();

        barrel*  barrels = init_barrels(8);
        print_barrels(barrels, 80+(dead_group-5)*8,8);
        barrel final_tasters = read_dead(3);

        int answer = find_barrel_by_dead(final_tasters, 80+(dead_group-5)*8, 3, 8);
        std::cout<<"\n-> Отравлена была бочка "<<answer<<" <-\nИгра окончена!\n";

        delete[] barrels;
    }

    //случай 3
    else if(dead_group>=15 && dead_group<=24)
    {
        std::cout<<"\n\n\n ----------------------------- День 2 -----------------------------\n"
                   "Круг подозрительных бочек удалось сузить до 4 штук и у нас осталось еще 2 раба!\n"
                   "Для удобства оставшихся рабов пронумеруем от 1 до 2\n"
                   "     _______         _______         _______         _______   \n"
                   "    /       \\       /       \\       /       \\       /       \\\n"
                   "   |         |     |         |     |         |     |         |   \n"
                   "   |    1    |     |    2    |     |    3    |     |    4    |   \n"
                   "   |         |     |         |     |         |     |         |   \n"
                   "    \\_______/       \\_______/       \\_______/       \\_______/\n"
                   "Нажмите клавишу Enter, чтобы продолжить...\n";
        check_istream();

        barrel*  barrels = init_barrels(4);
        print_barrels(barrels, 160+(dead_group-15)*4,4);
        barrel final_tasters = read_dead(2);

        int answer = find_barrel_by_dead(final_tasters, 160+(dead_group-15)*4, 2, 4);
        std::cout<<"\n-> Отравлена была бочка "<<answer<<" <-\nИгра окончена!\n";

        delete[] barrels;
    }

    //случай 4
    else if(dead_group>=25 && dead_group<=29)
    {
        std::cout<<"\n\n\n ----------------------------- День 2 -----------------------------\n"
                   "Круг подозрительных бочек удалось сузить до 4 штук и у нас осталось еще 2 раба!\n"
                   "Для удобства оставшихся рабов пронумеруем от 1 до 2\n"
                   "     _______         _______         _______         _______   \n"
                   "    /       \\       /       \\       /       \\       /       \\\n"
                   "   |         |     |         |     |         |     |         |   \n"
                   "   |    1    |     |    2    |     |    3    |     |    4    |   \n"
                   "   |         |     |         |     |         |     |         |   \n"
                   "    \\_______/       \\_______/       \\_______/       \\_______/\n"
                   "Нажмите клавишу Enter, чтобы продолжить...\n";
        check_istream();

        barrel*  barrels = init_barrels(2);
        print_barrels(barrels, 200+(dead_group-25)*2,2);
        barrel final_tasters = read_dead(1);

        int answer = find_barrel_by_dead(final_tasters, 200+(dead_group-25)*2, 1, 2);
        std::cout<<"\n-> Отравлена была бочка "<<answer<<" <-\nИгра окончена!\n";

        delete[] barrels;
    }

    //неверный ввод
    else std::cout<<"Вы жульничаете!\n";
}